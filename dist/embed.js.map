{"version":3,"file":"embed.js","sources":["src/lib/compatibility.js","src/lib/dom.js","src/lib/embed.js","src/lib/communication.js","src/lib/callback.js","src/embed.js"],"sourcesContent":["if (typeof window.postMessage === 'undefined') {\n  throw new Error('The Flat Embed JS API is not supported in this browser');\n}\n","/**\n * Select and normalize the DOM element input\n *\n * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element\n * @return {(HTMLIFrameElement|HTMLElement)}\n */\nexport function normalizeElement(element) {\n  if (window.jQuery && element instanceof window.jQuery) {\n    element = element[0];\n  }\n\n  // Find an element by identifier\n  if (typeof element === 'string') {\n    element = document.getElementById(element);\n  }\n\n  // Check if a DOM element\n  if (!(element instanceof window.HTMLElement)) {\n    throw new TypeError('The first parameter must be an existing DOM element or an identifier.');\n  }\n\n  // The element is not an embed iframe?\n  if (element.nodeName !== 'IFRAME') {\n    // check if already present in the element\n    const iframe = element.querySelector('iframe');\n    if (iframe) {\n      element = iframe;\n    }\n  }\n\n  return element;\n}\n","/**\n * Build url for the new iframe\n *\n * @param {object} parameters\n */\nexport function buildIframeUrl(parameters) {\n  let url = (parameters.baseUrl || 'https://flat-embed.com');\n\n  // Score id or blank embed\n  url += '/' + (parameters.score || 'blank');\n\n  // Build qs parameters\n  let urlParameters = Object.assign({\n    jsapi: true\n  }, parameters.embedParams);\n\n  let qs = Object.keys(urlParameters)\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(urlParameters[k])}`)\n    .join('&');\n\n  return url + '?' + qs;\n}\n\n/**\n * Create an iframe inside a specified element\n *\n * @param {HTMLElement} element\n * @param {object} parameters\n */\nexport function createEmbedIframe(element, parameters) {\n  let url = buildIframeUrl(parameters);\n\n  var iframe = document.createElement('iframe');\n  iframe.setAttribute('src', url);\n  iframe.setAttribute('width', parameters.width || '100%');\n  iframe.setAttribute('height', parameters.height || '100%');\n  iframe.setAttribute('allowfullscreen', true);\n  iframe.setAttribute('allow', 'midi');\n  iframe.setAttribute('frameborder', '0');\n\n  element.appendChild(iframe);\n\n  return iframe;\n}\n","/**\n * Send a message to the embed via postMessage\n *\n * @param {Embed} embed\n * @param {string} method The name of the method to call\n * @param {string} parameters The parameters to pass to the method\n */\nexport function postMessage(embed, method, parameters) {\n  if (!embed.element.contentWindow || !embed.element.contentWindow.postMessage) {\n    throw new Error('No `contentWindow` or `contentWindow.postMessage` available on the element');\n  }\n\n  let message = {\n    method,\n    parameters\n  };\n\n  embed.element.contentWindow.postMessage(message, embed.origin);\n}\n\n/**\n * Parse a message received from postMessage\n *\n * @param {string|object} data The data received from postMessage\n * @return {object}\n */\nexport function parseMessage(data) {\n  if (typeof data === 'string') {\n    data = JSON.parse(data);\n  }\n  return data;\n}\n","\nclass EmbedCallback {\n  constructor(embed) {\n    this.embed = embed;\n    this.promises = {};\n    this.eventCallbacks = {};\n    return this;\n  }\n\n  pushCall(name, resolve, reject) {\n    this.promises[name] = this.promises[name] || [];\n    this.promises[name].push({resolve, reject});\n  }\n\n  /**\n   * Register a callback for a specified event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} callback The function to call when receiving an event\n   * @return {boolen} `true` if it is the first subscriber, `false otherwise`\n   */\n  subscribeEvent(event, callback) {\n    this.eventCallbacks[event] = this.eventCallbacks[event] || [];\n    this.eventCallbacks[event].push(callback);\n    return this.eventCallbacks[event].length === 1;\n  }\n\n  /**\n   * Unregister a callback for a specified event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} [callback] The function to call when receiving an event\n   * @return {boolen} `true` if it is the last subscriber, `false otherwise`\n   */\n  unsubscribeEvent(event, callback) {\n    // Was not subscribed\n    if (!this.eventCallbacks[event]) {\n      return false;\n    }\n\n    // If a callback is specified, unsub this one\n    if (callback) {\n      let idx = this.eventCallbacks[event].indexOf(callback);\n      if (idx >= 0) {\n        this.eventCallbacks[event].splice(idx, 1);\n      }\n    }\n    // Unsub all\n    else {\n      this.eventCallbacks[event] = [];\n    }\n\n    return !callback || this.eventCallbacks[event].length === 0;\n  }\n\n  /**\n   * Process a message received from postMessage\n   *\n   * @param {object} data The data received from postMessage\n   */\n  process(data) {\n    if (data.method) {\n      this.processMethodResponse(data);\n    }\n    else if (data.event) {\n      this.processEvent(data);\n    }\n  }\n\n  /**\n   * Process a method response\n   *\n   * @param {object} data The data received from postMessage\n   */\n  processMethodResponse(data) {\n    if (!this.promises[data.method]) {\n      return;\n    }\n    var promise = this.promises[data.method].shift();\n    if (!promise) {\n      return;\n    }\n    if (data.error) {\n      promise.reject(data.error);\n    }\n    else {\n      promise.resolve(data.response);\n    }\n  }\n\n  /**\n   * Process a receieved event\n   *\n   * @param {object} data The data received from postMessage\n   */\n  processEvent(data) {\n    if (!this.eventCallbacks[data.event] ||\n        this.eventCallbacks[data.event].length === 0) {\n      return;\n    }\n    this.eventCallbacks[data.event].forEach((callback) => {\n      callback.call(this.embed, data.parameters);\n    });\n  }\n}\n\nexport default EmbedCallback;\n","import './lib/compatibility';\n\nimport { normalizeElement } from './lib/dom';\nimport { createEmbedIframe } from './lib/embed';\nimport { postMessage, parseMessage } from './lib/communication';\nimport EmbedCallback from './lib/callback';\n\nconst embeds = new WeakMap();\nconst embedsReady = new WeakMap();\n\nclass Embed {\n  /**\n   * Create a new Flat Embed\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to a Flat Embed iframe or a container for the new iframe\n   * @param {object} [params] Parameters for the new iframe\n   * @return {Embed}\n   */\n  constructor(element, params = {}) {\n    element = normalizeElement(element);\n\n    // Keep a single object instance per iframe\n    if (embeds.has(element)) {\n      return embeds.get(element);\n    }\n\n    // Create new element iframe if needed\n    if (element.nodeName !== 'IFRAME') {\n      element = createEmbedIframe(element, params);\n    }\n\n    this.origin = '*';\n    this.element = element;\n    this.embedCallback = new EmbedCallback();\n\n    const onReady = new Promise((resolve) => {\n      // Handle incoming messages from embed\n      const onMessage = (event) => {\n        if (element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (this.origin === '*') {\n          this.origin = event.origin;\n        }\n\n        // Parse inbound message\n        const data = parseMessage(event.data);\n\n        // Mark the embed as ready\n        if (data.event === 'ready' || data.method === 'ping') {\n          resolve();\n          return;\n        }\n\n        // Process regular messages from the embed\n        this.embedCallback.process(data);\n      };\n\n      window.addEventListener('message', onMessage, false);\n      postMessage(this, 'ping');\n    });\n\n    embeds.set(this.element, this);\n    embedsReady.set(this.element, onReady);\n\n    return this;\n  }\n\n  ready() {\n    return embedsReady.get(this.element);\n  }\n\n  call(method, parameters={}) {\n    return new Promise((resolve, reject) => {\n      return this.ready().then(() => {\n        this.embedCallback.pushCall(method, resolve, reject);\n        postMessage(this, method, parameters);\n      });\n    });\n  }\n\n  /**\n   * Subscribe to a specific event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} callback The function to call when receiving an event\n   */\n  on(event, callback) {\n    if (typeof event !== 'string') {\n      throw new TypeError('An event name (string) is required');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError('An callback (function) is required');\n    }\n    if (this.embedCallback.subscribeEvent(event, callback)) {\n      this.call('addEventListener', event).catch(() => {});\n    }\n  }\n\n  /**\n   * Unsubscribe to a specific event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} [callback] The function to unsubscribe\n   */\n  off(event, callback) {\n    if (typeof event !== 'string') {\n      throw new TypeError('An event name (string) is required');\n    }\n    if (this.embedCallback.unsubscribeEvent(event, callback)) {\n      this.call('removeEventListener', event).catch(() => {});\n    }\n  }\n\n  /**\n   * Load a score hosted on Flat\n   *\n   * @param {string|object} score The unique identifier of the score or an object with { score, sharingKey }\n   * @return {Promise}\n   * @reject {ApiError} Unable to load the score\n   */\n  loadFlatScore(score) {\n    if (typeof score === 'string') {\n      score = { score };\n    }\n    return this.call('loadFlatScore', score);\n  }\n\n  /**\n   * Load a MusicXML score\n   *\n   * @param {string} score The MusicXML file\n   * @return {Promise}\n   * @reject {Error} Unable to load the score\n   */\n  loadMusicXML(score) {\n    return this.call('loadMusicXML', score);\n  }\n\n  /**\n   * Load a Flat JSON score\n   *\n   * @param {object|string} score The JSON of the score\n   * @return {Promise}\n   * @reject {Error} Unable to load the score\n   */\n  loadJSON(score) {\n    return this.call('loadJSON', score);\n  }\n\n  /**\n   * Get the score in Flat JSON format\n   *\n   * @return {Promise}\n   * @fulfill {object} The Flat data format\n   */\n  getJSON() {\n    return this.call('getJSON');\n  }\n\n  /**\n   * Convert the displayed score in MusicXML\n   *\n   * @param {object} options Conversion options (`compressed`)\n   * @return {Promise}\n   * @fullfill {string|Uint8Array} MusicXML File\n   * @reject {Error} Conversion error\n   */\n  getMusicXML(options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      if (typeof options !== 'object') {\n        return reject(new TypeError('Options must be an object'));\n      }\n      this.call('getMusicXML', options).then((data) => {\n        // Plain XML\n        if (typeof data === 'string') {\n          return resolve(data);\n        }\n        // Compressed, re-create Uint8Array\n        return resolve(new Uint8Array(data));\n      }).catch(reject);\n    });\n  }\n\n  /**\n   * Convert the displayed score in PNG\n   *\n   * @return {Promise}\n   * @fullfill {Uint8Array} PNG File\n   * @reject {Error} Conversion error\n   */\n   getPNG(options) {\n     return new Promise((resolve, reject) => {\n       options = options || {};\n       if (typeof options !== 'object') {\n         return reject(new TypeError('Options must be an object'));\n       }\n       this.call('getPNG', options).then((data) => {\n         if (typeof data === 'string') {\n           return resolve(data);\n         }\n         return resolve(new Uint8Array(data));\n       }).catch(reject);\n     });\n   }\n\n  /**\n   * Convert the displayed score in MIDI\n   *\n   * @return {Promise}\n   * @fullfill {Uint8Array} MIDI File\n   * @reject {Error} Conversion error\n   */\n  getMIDI() {\n    return this.call('getMIDI').then(data => new Uint8Array(data));\n  }\n\n  /**\n   * Get the metadata of the score (for scores hosted on Flat)\n   *\n   * @return {Promise}\n   * @fulfill {object} The Flat data format (result from https://flat.io/developers/api/reference/#operation/getScore)\n   */\n  getFlatScoreMetadata() {\n    return this.call('getFlatScoreMetadata');\n  }\n\n  /**\n   * Get the whole embed config\n   *\n   * @return {Promise}\n   * @fullfill {object} An object containing the config of the embed\n   */\n   getEmbedConfig() {\n     return this.call('getEmbedConfig');\n   }\n\n  /**\n   * Set a config for the embed mode\n   * This config can be fetched with `getEmbed()` (as `editor` value)\n   * This config will be applied at the next score loading\n   *\n   * @param {object} editor The editor config\n   * @return {Promise}\n   * @fullfill {object} An object containing the config of the editor\n   */\n   setEditorConfig(editor) {\n     return this.call('setEditorConfig', editor);\n   }\n\n  /**\n   * Toggle fullscreen state\n   *\n   * @param {boolean} active `true` to switch on fullscreen, `false` to switch off\n   * @return {Promise} Once the state changed\n   */\n  fullscreen(active) {\n    return this.call('fullscreen', active);\n  }\n\n  /**\n   * Start the playback\n   *\n   * @return {Promise}\n   */\n  play() {\n    return this.call('play');\n  }\n\n  /**\n   * Pause the playback\n   *\n   * @return {Promise}\n   */\n  pause() {\n    return this.call('pause');\n  }\n\n  /**\n   * Stop the playback\n   *\n   * @return {Promise}\n   */\n  stop() {\n    return this.call('stop');\n  }\n\n  /**\n   * Mute playback\n   *\n   * @return {Promise}\n   */\n  mute() {\n    return this.call('mute');\n  }\n\n  /**\n   * Get the current master volume\n   *\n   * @return {Promise}\n   */\n  getMasterVolume() {\n    return this.call('getMasterVolume');\n  }\n\n  /**\n   * Get the current master volume\n   *\n   * @return {Promise}\n   */\n  setMasterVolume(parameters) {\n    return this.call('getMasterVolume', parameters);\n  }\n\n  /**\n   * Get the volume of a part\n   *\n   * @return {Promise}\n   */\n  getPartVolume(parameters) {\n    return this.call('getPartVolume', parameters);\n  }\n\n  /**\n   * Set the volume of a part\n   *\n   * @return {Promise}\n   */\n  setPartVolume(parameters) {\n    return this.call('setPartVolume', parameters);\n  }\n\n  /**\n   * Mute a part\n   *\n   * @return {Promise}\n   */\n  mutePart(parameters) {\n    return this.call('mutePart', parameters);\n  }\n\n  /**\n   * Mute a part\n   *\n   * @return {Promise}\n   */\n  unmutePart(parameters) {\n    return this.call('unmutePart', parameters);\n  }\n\n  /**\n   * Enable the solo mode for a part\n   *\n   * @return {Promise}\n   */\n  setPartSoloMode(parameters) {\n    return this.call('setPartSoloMode', parameters);\n  }\n\n  /**\n   * Disable the solo mode for a part\n   *\n   * @return {Promise}\n   */\n  unsetPartSoloMode(parameters) {\n    return this.call('unsetPartSoloMode', parameters);\n  }\n\n  /**\n   * Get the state of the solo mode of a part\n   *\n   * @return {Promise}\n   */\n  getPartSoloMode(parameters) {\n    return this.call('getPartSoloMode', parameters);\n  }\n\n  /**\n   * Get the volume of a part\n   *\n   * @return {Promise}\n   */\n  getPartReverb(parameters) {\n    return this.call('getPartReverb', parameters);\n  }\n\n  /**\n   * Set the volume of a part\n   *\n   * @return {Promise}\n   */\n  setPartReverb(parameters) {\n    return this.call('setPartReverb', parameters);\n  }\n\n  /**\n   * Configure a new audio or video track\n   *\n   * @return {Promise}\n   */\n  setTrack(parameters) {\n    return this.call('setTrack', parameters);\n  }\n\n  /**\n   * Enabled a previously configured track\n   *\n   * @return {Promise}\n   */\n  useTrack(parameters) {\n    return this.call('useTrack', parameters);\n  }\n\n  /**\n   * Seek the audio track to a specified duration\n   *\n   * @return {Promise}\n   */\n  seekTrackTo(parameters) {\n    return this.call('seekTrackTo', parameters);\n  }\n\n  /**\n   * Print the score\n   *\n   * @return {Promise}\n   */\n  print() {\n    return this.call('print');\n  }\n\n  /**\n   * Get the current zoom ratio\n   *\n   * @return {Promise}\n   * @fullfill {number} The current scale ratio (0.5 to 3)\n   */\n  getZoom() {\n    return this.call('getZoom');\n  }\n\n  /**\n   * Set a new zoom ratio (this will disable the zoom auto if set)\n   *\n   * @param {number} zoom The scale ratio (0.5 to 3)\n   * @return {Promise}\n   * @fullfill {number} The scale ratio applied\n   */\n  setZoom(zoom) {\n    return this.call('setZoom', zoom);\n  }\n\n  /**\n   * Get the auto-zoom\n   *\n   * @return {Promise}\n   * @fullfill {boolean} `true` if enabled, `false` if disabled\n   */\n  getAutoZoom() {\n    return this.call('getAutoZoom');\n  }\n\n  /**\n   * Enable or disable the auto-zoom\n   *\n   * @param {boolean} state `true` if enabled, `false` if disabled\n   * @return {Promise}\n   * @fullfill {boolean} The auto-zoom mode\n   */\n  setAutoZoom(state) {\n    return this.call('setAutoZoom', state);\n  }\n\n  /**\n   * Set the focus to the score\n   *\n   * @return {Promise}\n   */\n  focusScore() {\n    return this.call('focusScore');\n  }\n\n  /**\n   * Get cursor position\n   *\n   * @return {Promise}\n   * @fullfill {boolean} Current cursor position\n   */\n  getCursorPosition() {\n    return this.call('getCursorPosition');\n  }\n\n  /**\n   * Set cursor position\n   *\n   * @param {object} position New cursor position\n   * @return {Promise}\n   * @fullfill {boolean} Current cursor position\n   */\n  setCursorPosition(position) {\n    return this.call('setCursorPosition', position);\n  }\n\n  /**\n   * Get all the parts information\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the parts\n   */\n  getParts() {\n    return this.call('getParts');\n  }\n\n  /**\n   * Get the displayed parts\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the displayed parts\n   */\n  getDisplayedParts() {\n    return this.call('getDisplayedParts');\n  }\n\n  /**\n   * Choose the parts to display\n   *\n   * @param {array} parts List of the parts to display (UUIDs, indexes/idx, names or abbv)\n   * @return {Promise}\n   */\n  setDisplayedParts(parts) {\n    return this.call('setDisplayedParts', parts);\n  }\n\n  /**\n   * Get the number of measures in the score.\n   *\n   * @return {Promise}\n   * @fullfill {Number} The number of measures in the score\n   */\n   getNbMeasures() {\n     return this.call('getNbMeasures');\n   }\n\n  /**\n   * Get the measures uuids of the score\n   *\n   * @return {Promise}\n   * @fullfill {Array} The list of measures uuids.\n   */\n   getMeasuresUuids() {\n     return this.call('getMeasuresUuids');\n   }\n\n  /**\n   * Get all the parts information\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the parts\n   */\n  getMeasureDetails() {\n    return this.call('getMeasureDetails');\n  }\n\n  /**\n   * Get all the parts information\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the parts\n   */\n  getNoteDetails() {\n    return this.call('getNoteDetails');\n  }\n\n  /**\n   * Move the cursor to the next left item in the score (grace note, note or rest).\n   *\n   * @param {Boolean} mute false to play the note the cursor is moving to\n   * @return {Promise}\n   * @fullfill {Promise}\n   */\n  goLeft(mute = false) {\n    return this.call('goLeft', { mute });\n  }\n\n  /**\n   * Move the cursor to the next right item in the score (grace note, note or rest).\n   *\n   * @param {Boolean} mute false to play the note the cursor is moving to\n   * @return {Promise}\n   * @fullfill {Promise}\n   */\n  goRight(mute = false) {\n    return this.call('goRight', { mute });\n  }\n}\n\nexport default Embed;\n"],"names":["window","postMessage","Error","normalizeElement","element","jQuery","document","getElementById","HTMLElement","TypeError","nodeName","iframe","querySelector","buildIframeUrl","parameters","url","baseUrl","score","urlParameters","Object","assign","jsapi","embedParams","qs","keys","map","k","encodeURIComponent","join","createEmbedIframe","createElement","setAttribute","width","height","appendChild","embed","method","contentWindow","message","origin","parseMessage","data","JSON","parse","EmbedCallback","promises","eventCallbacks","name","resolve","reject","push","event","callback","length","idx","indexOf","splice","processMethodResponse","processEvent","promise","shift","error","response","forEach","call","embeds","WeakMap","embedsReady","Embed","params","has","get","embedCallback","onReady","Promise","onMessage","source","process","addEventListener","set","ready","then","pushCall","subscribeEvent","catch","unsubscribeEvent","options","Uint8Array","editor","active","zoom","state","position","parts","mute"],"mappings":"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"}