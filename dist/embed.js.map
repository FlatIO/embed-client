{"version":3,"file":"embed.js.map","sources":["../src/lib/compatibility.js","../src/lib/dom.js","../src/lib/embed.js","../src/lib/communication.js","../src/lib/callback.js","../src/embed.js"],"sourcesContent":["if (typeof window.postMessage === 'undefined') {\n  throw new Error('The Flat Embed JS API is not supported in this browser');\n}\n","/**\n * Select and normalize the DOM element input\n *\n * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element\n * @return {(HTMLIFrameElement|HTMLElement)}\n */\nexport function normalizeElement(element) {\n  if (window.jQuery && element instanceof window.jQuery) {\n    element = element[0];\n  }\n\n  // Find an element by identifier\n  if (typeof element === 'string') {\n    element = document.getElementById(element);\n  }\n\n  // Check if a DOM element\n  if (!(element instanceof window.HTMLElement)) {\n    throw new TypeError('The first parameter must be an existing DOM element or an identifier.');\n  }\n\n  // The element is not an embed iframe?\n  if (element.nodeName !== 'IFRAME') {\n    // check if already present in the element\n    const iframe = element.querySelector('iframe');\n    if (iframe) {\n      element = iframe;\n    }\n  }\n\n  return element;\n}\n","/**\n * Build url for the new iframe\n *\n * @param {object} parameters\n */\nexport function buildIframeUrl(parameters) {\n  let url = (parameters.baseUrl || 'https://flat.io/embed');\n\n  // Score id or blank embed\n  url += '/' + (parameters.score || 'blank');\n\n  // Build qs parameters\n  let urlParameters = Object.assign({\n    jsapi: true\n  }, parameters.embedParams);\n\n  let qs = Object.keys(urlParameters)\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(urlParameters[k])}`)\n    .join('&');\n\n  return url + '?' + qs;\n}\n\n/**\n * Create an iframe inside a specified element\n *\n * @param {HTMLElement} element\n * @param {object} parameters\n */\nexport function createEmbedIframe(element, parameters) {\n  let url = buildIframeUrl(parameters);\n\n  var iframe = document.createElement('iframe');\n  iframe.setAttribute('src', url);\n  iframe.setAttribute('width', parameters.width || '100%');\n  iframe.setAttribute('height', parameters.height || '100%');\n  iframe.setAttribute('allowfullscreen', true);\n  iframe.setAttribute('frameborder', '0');\n\n  element.appendChild(iframe);\n\n  return iframe;\n}\n","/**\n * Send a message to the embed via postMessage\n *\n * @param {Embed} embed\n * @param {string} method The name of the method to call\n * @param {string} parameters The parameters to pass to the method\n */\nexport function postMessage(embed, method, parameters) {\n  if (!embed.element.contentWindow || !embed.element.contentWindow.postMessage) {\n    throw new Error('No `contentWindow` or `contentWindow.postMessage` avaialble on the element');\n  }\n\n  let message = {\n    method,\n    parameters\n  };\n\n  embed.element.contentWindow.postMessage(message, embed.origin);\n}\n\n/**\n * Parse a message received from postMessage\n *\n * @param {string|object} data The data received from postMessage\n * @return {object}\n */\nexport function parseMessage(data) {\n  if (typeof data === 'string') {\n    data = JSON.parse(data);\n  }\n  return data;\n}\n","\nclass EmbedCallback {\n  constructor(embed) {\n    this.embed = embed;\n    this.promises = {};\n    this.eventCallbacks = {};\n    return this;\n  }\n\n  pushCall(name, resolve, reject) {\n    this.promises[name] = this.promises[name] || [];\n    this.promises[name].push({resolve, reject});\n  }\n\n  /**\n   * Register a callback for a specified event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} callback The function to call when receiving an event\n   * @return {boolen} `true` if it is the first subscriber, `false otherwise`\n   */\n  subscribeEvent(event, callback) {\n    this.eventCallbacks[event] = this.eventCallbacks[event] || [];\n    this.eventCallbacks[event].push(callback);\n    return this.eventCallbacks[event].length === 1;\n  }\n\n  /**\n   * Unregister a callback for a specified event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} [callback] The function to call when receiving an event\n   * @return {boolen} `true` if it is the last subscriber, `false otherwise`\n   */\n  unsubscribeEvent(event, callback) {\n    // Was not subscribed\n    if (!this.eventCallbacks[event]) {\n      return false;\n    }\n\n    // If a callback is specified, unsub this one\n    if (callback) {\n      let idx = this.eventCallbacks[event].indexOf(callback);\n      if (idx >= 0) {\n        this.eventCallbacks[event].splice(idx, 1);\n      }\n    }\n    // Unsub all\n    else {\n      this.eventCallbacks[event] = [];\n    }\n\n    return !callback || this.eventCallbacks[event].length === 0;\n  }\n\n  /**\n   * Process a message received from postMessage\n   *\n   * @param {object} data The data received from postMessage\n   */\n  process(data) {\n    if (data.method) {\n      this.processMethodResponse(data);\n    }\n    else if (data.event) {\n      this.processEvent(data);\n    }\n  }\n\n  /**\n   * Process a method response\n   *\n   * @param {object} data The data received from postMessage\n   */\n  processMethodResponse(data) {\n    var promise = this.promises[data.method].shift();\n    if (!promise) {\n      return;\n    }\n    if (data.error) {\n      promise.reject(data.error);\n    }\n    else {\n      promise.resolve(data.response);\n    }\n  }\n\n  /**\n   * Process a receieved event\n   *\n   * @param {object} data The data received from postMessage\n   */\n  processEvent(data) {\n    if (!this.eventCallbacks[data.event] ||\n        this.eventCallbacks[data.event].length === 0) {\n      return;\n    }\n    this.eventCallbacks[data.event].forEach((callback) => {\n      callback.call(this.embed, data.parameters);\n    });\n  }\n}\n\nexport default EmbedCallback;\n","import './lib/compatibility';\n\nimport { normalizeElement } from './lib/dom';\nimport { createEmbedIframe } from './lib/embed';\nimport { postMessage, parseMessage } from './lib/communication';\nimport EmbedCallback from './lib/callback';\n\nconst embeds = new WeakMap();\nconst embedsReady = new WeakMap();\n\nclass Embed {\n  /**\n   * Create a new Flat Embed\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to a Flat Embed iframe or a container for the new iframe\n   * @param {object} [params] Parameters for the new iframe\n   * @return {Embed}\n   */\n  constructor(element, params = {}) {\n    element = normalizeElement(element);\n\n    // Keep a single object instance per iframe\n    if (embeds.has(element)) {\n      return embeds.get(element);\n    }\n\n    // Create new element iframe if needed\n    if (element.nodeName !== 'IFRAME') {\n      element = createEmbedIframe(element, params);\n    }\n\n    this.origin = '*';\n    this.element = element;\n    this.embedCallback = new EmbedCallback();\n\n    const onReady = new Promise((resolve) => {\n      // Handle incoming messages from embed\n      const onMessage = (event) => {\n        if (element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (this.origin === '*') {\n          this.origin = event.origin;\n        }\n\n        // Parse inbound message\n        const data = parseMessage(event.data);\n\n        // Mark the embed as ready\n        if (data.event === 'ready' || data.method === 'ping') {\n          resolve();\n          return;\n        }\n\n        // Process regular messages from the embed\n        this.embedCallback.process(data);\n      };\n\n      window.addEventListener('message', onMessage, false);\n      postMessage(this, 'ping');\n    });\n\n    embeds.set(this.element, this);\n    embedsReady.set(this, onReady);\n\n    return this;\n  }\n\n  ready() {\n    return Promise.resolve(embedsReady.get(this));\n  }\n\n  call(method, parameters={}) {\n    return new Promise((resolve, reject) => {\n      return this.ready().then(() => {\n        this.embedCallback.pushCall(method, resolve, reject);\n        postMessage(this, method, parameters);\n      });\n    });\n  }\n\n  /**\n   * Subscribe to a specific event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} callback The function to call when receiving an event\n   */\n  on(event, callback) {\n    if (typeof event !== 'string') {\n      throw new TypeError('An event name (string) is required');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError('An callback (function) is required');\n    }\n    if (this.embedCallback.subscribeEvent(event, callback)) {\n      this.call('addEventListener', event).catch(() => {});\n    }\n  }\n\n  /**\n   * Unsubscribe to a specific event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} [callback] The function to unsubscribe\n   */\n  off(event, callback) {\n    if (typeof event !== 'string') {\n      throw new TypeError('An event name (string) is required');\n    }\n    if (this.embedCallback.unsubscribeEvent(event, callback)) {\n      this.call('removeEventListener', event).catch(() => {});\n    }\n  }\n\n  /**\n   * Load a score hosted on Flat\n   *\n   * @param {string} score The unique identifier of the score\n   * @param {string} [revision] The unique identifier of the revision\n   * @return {Promise}\n   * @reject {ApiError} Unable to load the score\n   */\n  loadFlatScore(score, revision) {\n    return this.call('loadFlatScore', {score, revision});\n  }\n\n  /**\n   * Load a MusicXML score\n   *\n   * @param {string} score The MusicXML file\n   * @return {Promise}\n   * @reject {Error} Unable to load the score\n   */\n  loadMusicXML(score) {\n    return this.call('loadMusicXML', score);\n  }\n\n  /**\n   * Load a Flat JSON score\n   *\n   * @param {object|string} score The JSON of the score\n   * @return {Promise}\n   * @reject {Error} Unable to load the score\n   */\n  loadJSON(score) {\n    return this.call('loadJSON', score);\n  }\n\n  /**\n   * Get the score in Flat JSON format\n   *\n   * @return {Promise}\n   * @fulfill {object} The Flat data format\n   */\n  getJSON() {\n    return this.call('getJSON');\n  }\n\n  /**\n   * Convert the displayed score in MusicXML\n   *\n   * @param {object} options Conversion options (`compressed`)\n   * @return {Promise}\n   * @fullfill {string|Uint8Array} MusicXML File\n   * @reject {Error} Conversion error\n   */\n  getMusicXML(options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      if (typeof options !== 'object') {\n        return reject(new TypeError('Options must be an object'));\n      }\n      this.call('getMusicXML', options).then((data) => {\n        // Plain XML\n        if (typeof data === 'string') {\n          return resolve(data);\n        }\n        // Compressed, re-create Uint8Array\n        return resolve(new Uint8Array(data.data));\n      }).catch(reject);\n    });\n  }\n\n  /**\n   * Convert the displayed score in PNG\n   *\n   * @return {Promise}\n   * @fullfill {Uint8Array} PNG File\n   * @reject {Error} Conversion error\n   */\n   getPNG(options) {\n     return new Promise((resolve, reject) => {\n       options = options || {};\n       if (typeof options !== 'object') {\n         return reject(new TypeError('Options must be an object'));\n       }\n       this.call('getPNG', options).then((data) => {\n         if (typeof data === 'string') {\n           return resolve(data);\n         }\n         return resolve(new Uint8Array(data));\n       }).catch(reject);\n     });\n   }\n\n  /**\n   * Get the metadata of the score (for scores hosted on Flat)\n   *\n   * @return {Promise}\n   * @fulfill {object} The Flat data format (result from https://flat.io/developers/api/reference/#operation/getScore)\n   */\n  getFlatScoreMetadata() {\n    return this.call('getFlatScoreMetadata');\n  }\n\n  /**\n   * Get the whole embed config\n   *\n   * @return {Promise}\n   * @fullfill {object} An object containing the config of the embed\n   */\n   getEmbedConfig() {\n     return this.call('getEmbedConfig');\n   }\n\n  /**\n   * Set a config for the embed mode\n   * This config can be fetched with `getEmbed()` (as `editor` value)\n   * This config will be applied at the next score loading\n   *\n   * @param {object} editor The editor config\n   * @return {Promise}\n   * @fullfill {object} An object containing the config of the editor\n   */\n   setEditorConfig(editor) {\n     return this.call('setEditorConfig', editor);\n   }\n\n  /**\n   * Toggle fullscreen state\n   *\n   * @param {boolean} active `true` to switch on fullscreen, `false` to switch off\n   * @return {Promise} Once the state changed\n   */\n  fullscreen(active) {\n    return this.call('fullscreen', active);\n  }\n\n  /**\n   * Start the playback\n   *\n   * @return {Promise}\n   */\n  play() {\n    return this.call('play');\n  }\n\n  /**\n   * Pause the playback\n   *\n   * @return {Promise}\n   */\n  pause() {\n    return this.call('pause');\n  }\n\n  /**\n   * Stop the playback\n   *\n   * @return {Promise}\n   */\n  stop() {\n    return this.call('stop');\n  }\n\n  /**\n   * Mute playback\n   *\n   * @return {Promise}\n   */\n  mute() {\n    return this.call('mute');\n  }\n\n  /**\n   * Print the score\n   *\n   * @return {Promise}\n   */\n  print() {\n    return this.call('print');\n  }\n\n  /**\n   * Get the current zoom ratio\n   *\n   * @return {Promise}\n   * @fullfill {number} The current scale ratio (0.5 to 3)\n   */\n  getZoom() {\n    return this.call('getZoom');\n  }\n\n  /**\n   * Set a new zoom ratio (this will disable the zoom auto if set)\n   *\n   * @param {number} zoom The scale ratio (0.5 to 3)\n   * @return {Promise}\n   * @fullfill {number} The scale ratio applied\n   */\n  setZoom(zoom) {\n    return this.call('setZoom', zoom);\n  }\n\n  /**\n   * Get the auto-zoom\n   *\n   * @return {Promise}\n   * @fullfill {boolean} `true` if enabled, `false` if disabled\n   */\n  getAutoZoom() {\n    return this.call('getAutoZoom');\n  }\n\n  /**\n   * Enable or disable the auto-zoom\n   *\n   * @param {boolean} state `true` if enabled, `false` if disabled\n   * @return {Promise}\n   * @fullfill {boolean} The auto-zoom mode\n   */\n  setAutoZoom(state) {\n    return this.call('setAutoZoom', state);\n  }\n\n  /**\n   * Set the focus to the score\n   *\n   * @return {Promise}\n   */\n  focusScore() {\n    return this.call('focusScore');\n  }\n\n  /**\n   * Get cursor position\n   *\n   * @return {Promise}\n   * @fullfill {boolean} Current cursor position\n   */\n  getCursorPosition() {\n    return this.call('getCursorPosition');\n  }\n\n  /**\n   * Set cursor position\n   *\n   * @param {object} position New cursor position\n   * @return {Promise}\n   * @fullfill {boolean} Current cursor position\n   */\n  setCursorPosition(position) {\n    return this.call('setCursorPosition', position);\n  }\n\n  /**\n   * Call Flat's internal edit methods\n   *\n   * @param {operations} The operations to process\n   */\n  edit(operations) {\n    return this.call('edit', operations);\n  }\n\n  /**\n   * Set note color\n   *\n   * @param {noteLocation} position of the note to change\n   * @param {color} The color to apply\n   */\n  setNoteColor(noteLocation, color) {\n    return this.call('setNoteColor', { note: noteLocation, color: color });\n  }\n}\n\nexport default Embed;\n"],"names":["window","postMessage","Error","normalizeElement","element","jQuery","document","getElementById","HTMLElement","TypeError","nodeName","iframe","querySelector","buildIframeUrl","parameters","url","baseUrl","score","urlParameters","Object","assign","embedParams","qs","keys","map","encodeURIComponent","k","join","createEmbedIframe","createElement","setAttribute","width","height","appendChild","embed","method","contentWindow","message","origin","parseMessage","data","JSON","parse","EmbedCallback","promises","eventCallbacks","name","resolve","reject","push","event","callback","length","idx","indexOf","splice","processMethodResponse","processEvent","promise","shift","error","response","forEach","call","embeds","WeakMap","embedsReady","Embed","params","has","get","embedCallback","onReady","Promise","onMessage","source","process","addEventListener","set","ready","then","pushCall","subscribeEvent","catch","unsubscribeEvent","revision","options","Uint8Array","editor","active","zoom","state","position","operations","noteLocation","color","note"],"mappings":"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"}