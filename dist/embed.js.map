{"version":3,"file":"embed.js","sources":["src/lib/compatibility.js","src/lib/dom.js","src/lib/embed.js","src/lib/communication.js","src/lib/callback.js","src/embed.js"],"sourcesContent":["if (typeof window.postMessage === 'undefined') {\n  throw new Error('The Flat Embed JS API is not supported in this browser');\n}\n","/**\n * Select and normalize the DOM element input\n *\n * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element\n * @return {(HTMLIFrameElement|HTMLElement)}\n */\nexport function normalizeElement(element) {\n  if (window.jQuery && element instanceof window.jQuery) {\n    element = element[0];\n  }\n\n  // Find an element by identifier\n  if (typeof element === 'string') {\n    element = document.getElementById(element);\n  }\n\n  // Check if a DOM element\n  if (!(element instanceof window.HTMLElement)) {\n    throw new TypeError('The first parameter must be an existing DOM element or an identifier.');\n  }\n\n  // The element is not an embed iframe?\n  if (element.nodeName !== 'IFRAME') {\n    // check if already present in the element\n    const iframe = element.querySelector('iframe');\n    if (iframe) {\n      element = iframe;\n    }\n  }\n\n  return element;\n}\n","/**\n * Build url for the new iframe\n *\n * @param {object} parameters\n */\nexport function buildIframeUrl(parameters) {\n  let url = (parameters.baseUrl || 'https://flat-embed.com');\n\n  // Score id or blank embed\n  url += '/' + (parameters.score || 'blank');\n\n  // Build qs parameters\n  let urlParameters = Object.assign({\n    jsapi: true\n  }, parameters.embedParams);\n\n  let qs = Object.keys(urlParameters)\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(urlParameters[k])}`)\n    .join('&');\n\n  return url + '?' + qs;\n}\n\n/**\n * Create an iframe inside a specified element\n *\n * @param {HTMLElement} element\n * @param {object} parameters\n */\nexport function createEmbedIframe(element, parameters) {\n  let url = buildIframeUrl(parameters);\n\n  var iframe = document.createElement('iframe');\n  iframe.setAttribute('src', url);\n  iframe.setAttribute('width', parameters.width || '100%');\n  iframe.setAttribute('height', parameters.height || '100%');\n  iframe.setAttribute('allowfullscreen', true);\n  iframe.setAttribute('allow', 'autoplay; midi');\n  iframe.setAttribute('frameborder', '0');\n\n  element.appendChild(iframe);\n\n  return iframe;\n}\n","/**\n * Send a message to the embed via postMessage\n *\n * @param {Embed} embed\n * @param {string} method The name of the method to call\n * @param {string} parameters The parameters to pass to the method\n */\nexport function postMessage(embed, method, parameters) {\n  if (!embed.element.contentWindow || !embed.element.contentWindow.postMessage) {\n    throw new Error('No `contentWindow` or `contentWindow.postMessage` available on the element');\n  }\n\n  let message = {\n    method,\n    parameters\n  };\n\n  embed.element.contentWindow.postMessage(message, embed.origin);\n}\n\n/**\n * Parse a message received from postMessage\n *\n * @param {string|object} data The data received from postMessage\n * @return {object}\n */\nexport function parseMessage(data) {\n  if (typeof data === 'string') {\n    data = JSON.parse(data);\n  }\n  return data;\n}\n","\nclass EmbedCallback {\n  constructor(embed) {\n    this.embed = embed;\n    this.promises = {};\n    this.eventCallbacks = {};\n    return this;\n  }\n\n  pushCall(name, resolve, reject) {\n    this.promises[name] = this.promises[name] || [];\n    this.promises[name].push({resolve, reject});\n  }\n\n  /**\n   * Register a callback for a specified event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} callback The function to call when receiving an event\n   * @return {boolen} `true` if it is the first subscriber, `false otherwise`\n   */\n  subscribeEvent(event, callback) {\n    this.eventCallbacks[event] = this.eventCallbacks[event] || [];\n    this.eventCallbacks[event].push(callback);\n    return this.eventCallbacks[event].length === 1;\n  }\n\n  /**\n   * Unregister a callback for a specified event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} [callback] The function to call when receiving an event\n   * @return {boolen} `true` if it is the last subscriber, `false otherwise`\n   */\n  unsubscribeEvent(event, callback) {\n    // Was not subscribed\n    if (!this.eventCallbacks[event]) {\n      return false;\n    }\n\n    // If a callback is specified, unsub this one\n    if (callback) {\n      let idx = this.eventCallbacks[event].indexOf(callback);\n      if (idx >= 0) {\n        this.eventCallbacks[event].splice(idx, 1);\n      }\n    }\n    // Unsub all\n    else {\n      this.eventCallbacks[event] = [];\n    }\n\n    return !callback || this.eventCallbacks[event].length === 0;\n  }\n\n  /**\n   * Process a message received from postMessage\n   *\n   * @param {object} data The data received from postMessage\n   */\n  process(data) {\n    if (data.method) {\n      this.processMethodResponse(data);\n    }\n    else if (data.event) {\n      this.processEvent(data);\n    }\n  }\n\n  /**\n   * Process a method response\n   *\n   * @param {object} data The data received from postMessage\n   */\n  processMethodResponse(data) {\n    if (!this.promises[data.method]) {\n      return;\n    }\n    var promise = this.promises[data.method].shift();\n    if (!promise) {\n      return;\n    }\n    if (data.error) {\n      promise.reject(data.error);\n    }\n    else {\n      promise.resolve(data.response);\n    }\n  }\n\n  /**\n   * Process a receieved event\n   *\n   * @param {object} data The data received from postMessage\n   */\n  processEvent(data) {\n    if (!this.eventCallbacks[data.event] ||\n        this.eventCallbacks[data.event].length === 0) {\n      return;\n    }\n    this.eventCallbacks[data.event].forEach((callback) => {\n      callback.call(this.embed, data.parameters);\n    });\n  }\n}\n\nexport default EmbedCallback;\n","import './lib/compatibility';\n\nimport { normalizeElement } from './lib/dom';\nimport { createEmbedIframe } from './lib/embed';\nimport { postMessage, parseMessage } from './lib/communication';\nimport EmbedCallback from './lib/callback';\n\nconst embeds = new WeakMap();\nconst embedsReady = new WeakMap();\n\nclass Embed {\n  /**\n   * Create a new Flat Embed\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to a Flat Embed iframe or a container for the new iframe\n   * @param {object} [params] Parameters for the new iframe\n   * @return {Embed}\n   */\n  constructor(element, params = {}) {\n    element = normalizeElement(element);\n\n    // Keep a single object instance per iframe\n    if (embeds.has(element)) {\n      return embeds.get(element);\n    }\n\n    // Create new element iframe if needed\n    if (element.nodeName !== 'IFRAME') {\n      element = createEmbedIframe(element, params);\n    }\n\n    this.origin = '*';\n    this.element = element;\n    this.embedCallback = new EmbedCallback();\n\n    const onReady = new Promise((resolve) => {\n      // Handle incoming messages from embed\n      const onMessage = (event) => {\n        if (element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (this.origin === '*') {\n          this.origin = event.origin;\n        }\n\n        // Parse inbound message\n        const data = parseMessage(event.data);\n\n        // Mark the embed as ready\n        if (data.event === 'ready' || data.method === 'ping') {\n          resolve();\n          return;\n        }\n\n        // Process regular messages from the embed\n        this.embedCallback.process(data);\n      };\n\n      window.addEventListener('message', onMessage, false);\n      postMessage(this, 'ping');\n    });\n\n    embeds.set(this.element, this);\n    embedsReady.set(this.element, onReady);\n\n    return this;\n  }\n\n  ready() {\n    return embedsReady.get(this.element);\n  }\n\n  call(method, parameters = {}) {\n    return new Promise((resolve, reject) => {\n      return this.ready().then(() => {\n        this.embedCallback.pushCall(method, resolve, reject);\n        postMessage(this, method, parameters);\n      });\n    });\n  }\n\n  /**\n   * Subscribe to a specific event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} callback The function to call when receiving an event\n   */\n  on(event, callback) {\n    if (typeof event !== 'string') {\n      throw new TypeError('An event name (string) is required');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError('An callback (function) is required');\n    }\n    if (this.embedCallback.subscribeEvent(event, callback)) {\n      this.call('addEventListener', event).catch(() => { });\n    }\n  }\n\n  /**\n   * Unsubscribe to a specific event\n   *\n   * @param {string} event The name of the event.\n   * @param {function} [callback] The function to unsubscribe\n   */\n  off(event, callback) {\n    if (typeof event !== 'string') {\n      throw new TypeError('An event name (string) is required');\n    }\n    if (this.embedCallback.unsubscribeEvent(event, callback)) {\n      this.call('removeEventListener', event).catch(() => { });\n    }\n  }\n\n  /**\n   * Load a score hosted on Flat\n   *\n   * @param {string|object} score The unique identifier of the score or an object with { score, sharingKey }\n   * @return {Promise}\n   * @reject {ApiError} Unable to load the score\n   */\n  loadFlatScore(score) {\n    if (typeof score === 'string') {\n      score = { score };\n    }\n    return this.call('loadFlatScore', score);\n  }\n\n  /**\n   * Load a MusicXML score\n   *\n   * @param {string} score The MusicXML file\n   * @return {Promise}\n   * @reject {Error} Unable to load the score\n   */\n  loadMusicXML(score) {\n    return this.call('loadMusicXML', score);\n  }\n\n  /**\n   * Load a Flat JSON score\n   *\n   * @param {object|string} score The JSON of the score\n   * @return {Promise}\n   * @reject {Error} Unable to load the score\n   */\n  loadJSON(score) {\n    return this.call('loadJSON', score);\n  }\n\n  /**\n   * Get the score in Flat JSON format\n   *\n   * @return {Promise}\n   * @fulfill {object} The Flat data format\n   */\n  getJSON() {\n    return this.call('getJSON');\n  }\n\n  /**\n   * Convert the displayed score in MusicXML\n   *\n   * @param {object} options Conversion options (`compressed`)\n   * @return {Promise}\n   * @fullfill {string|Uint8Array} MusicXML File\n   * @reject {Error} Conversion error\n   */\n  getMusicXML(options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      if (typeof options !== 'object') {\n        return reject(new TypeError('Options must be an object'));\n      }\n      this.call('getMusicXML', options).then((data) => {\n        // Plain XML\n        if (typeof data === 'string') {\n          return resolve(data);\n        }\n        // Compressed, re-create Uint8Array\n        return resolve(new Uint8Array(data));\n      }).catch(reject);\n    });\n  }\n\n  /**\n   * Convert the displayed score in PNG\n   *\n   * @return {Promise}\n   * @fullfill {Uint8Array} PNG File\n   * @reject {Error} Conversion error\n   */\n  getPNG(options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      if (typeof options !== 'object') {\n        return reject(new TypeError('Options must be an object'));\n      }\n      this.call('getPNG', options).then((data) => {\n        if (typeof data === 'string') {\n          return resolve(data);\n        }\n        return resolve(new Uint8Array(data));\n      }).catch(reject);\n    });\n  }\n\n  /**\n   * Convert the displayed score in MIDI\n   *\n   * @return {Promise}\n   * @fullfill {Uint8Array} MIDI File\n   * @reject {Error} Conversion error\n   */\n  getMIDI() {\n    return this.call('getMIDI').then(data => new Uint8Array(data));\n  }\n\n  /**\n   * Get the metadata of the score (for scores hosted on Flat)\n   *\n   * @return {Promise}\n   * @fulfill {object} The Flat data format (result from https://flat.io/developers/api/reference/#operation/getScore)\n   */\n  getFlatScoreMetadata() {\n    return this.call('getFlatScoreMetadata');\n  }\n\n  /**\n   * Get the whole embed config\n   *\n   * @return {Promise}\n   * @fullfill {object} An object containing the config of the embed\n   */\n  getEmbedConfig() {\n    return this.call('getEmbedConfig');\n  }\n\n  /**\n   * Set a config for the embed mode\n   * This config can be fetched with `getEmbed()` (as `editor` value)\n   * This config will be applied at the next score loading\n   *\n   * @param {object} editor The editor config\n   * @return {Promise}\n   * @fullfill {object} An object containing the config of the editor\n   */\n  setEditorConfig(editor) {\n    return this.call('setEditorConfig', editor);\n  }\n\n  /**\n   * Toggle fullscreen state\n   *\n   * @param {boolean} active `true` to switch on fullscreen, `false` to switch off\n   * @return {Promise} Once the state changed\n   */\n  fullscreen(active) {\n    return this.call('fullscreen', active);\n  }\n\n  /**\n   * Start the playback\n   *\n   * @return {Promise}\n   */\n  play() {\n    return this.call('play');\n  }\n\n  /**\n   * Pause the playback\n   *\n   * @return {Promise}\n   */\n  pause() {\n    return this.call('pause');\n  }\n\n  /**\n   * Stop the playback\n   *\n   * @return {Promise}\n   */\n  stop() {\n    return this.call('stop');\n  }\n\n  /**\n   * Mute playback\n   *\n   * @return {Promise}\n   */\n  mute() {\n    return this.call('mute');\n  }\n\n  /**\n   * Get the current master volume\n   *\n   * @return {Promise}\n   */\n  getMasterVolume() {\n    return this.call('getMasterVolume');\n  }\n\n  /**\n   * Set the current master volume\n   *\n   * @return {Promise}\n   */\n  setMasterVolume(parameters) {\n    return this.call('getMasterVolume', parameters);\n  }\n\n  /**\n   * Get the volume of a part\n   *\n   * @return {Promise}\n   */\n  getPartVolume(parameters) {\n    return this.call('getPartVolume', parameters);\n  }\n\n  /**\n   * Set the volume of a part\n   *\n   * @return {Promise}\n   */\n  setPartVolume(parameters) {\n    return this.call('setPartVolume', parameters);\n  }\n\n  /**\n   * Mute a part\n   *\n   * @return {Promise}\n   */\n  mutePart(parameters) {\n    return this.call('mutePart', parameters);\n  }\n\n  /**\n   * Mute a part\n   *\n   * @return {Promise}\n   */\n  unmutePart(parameters) {\n    return this.call('unmutePart', parameters);\n  }\n\n  /**\n   * Enable the solo mode for a part\n   *\n   * @return {Promise}\n   */\n  setPartSoloMode(parameters) {\n    return this.call('setPartSoloMode', parameters);\n  }\n\n  /**\n   * Disable the solo mode for a part\n   *\n   * @return {Promise}\n   */\n  unsetPartSoloMode(parameters) {\n    return this.call('unsetPartSoloMode', parameters);\n  }\n\n  /**\n   * Get the state of the solo mode of a part\n   *\n   * @return {Promise}\n   */\n  getPartSoloMode(parameters) {\n    return this.call('getPartSoloMode', parameters);\n  }\n\n  /**\n   * Get the volume of a part\n   *\n   * @return {Promise}\n   */\n  getPartReverb(parameters) {\n    return this.call('getPartReverb', parameters);\n  }\n\n  /**\n   * Set the volume of a part\n   *\n   * @return {Promise}\n   */\n  setPartReverb(parameters) {\n    return this.call('setPartReverb', parameters);\n  }\n\n  /**\n   * Configure a new audio or video track\n   *\n   * @return {Promise}\n   */\n  setTrack(parameters) {\n    return this.call('setTrack', parameters);\n  }\n\n  /**\n   * Enabled a previously configured track\n   *\n   * @return {Promise}\n   */\n  useTrack(parameters) {\n    return this.call('useTrack', parameters);\n  }\n\n  /**\n   * Seek the audio track to a specified duration\n   *\n   * @return {Promise}\n   */\n  seekTrackTo(parameters) {\n    return this.call('seekTrackTo', parameters);\n  }\n\n  /**\n   * Print the score\n   *\n   * @return {Promise}\n   */\n  print() {\n    return this.call('print');\n  }\n\n  /**\n   * Get the current zoom ratio\n   *\n   * @return {Promise}\n   * @fullfill {number} The current scale ratio (0.5 to 3)\n   */\n  getZoom() {\n    return this.call('getZoom');\n  }\n\n  /**\n   * Set a new zoom ratio (this will disable the zoom auto if set)\n   *\n   * @param {number} zoom The scale ratio (0.5 to 3)\n   * @return {Promise}\n   * @fullfill {number} The scale ratio applied\n   */\n  setZoom(zoom) {\n    return this.call('setZoom', zoom);\n  }\n\n  /**\n   * Get the auto-zoom\n   *\n   * @return {Promise}\n   * @fullfill {boolean} `true` if enabled, `false` if disabled\n   */\n  getAutoZoom() {\n    return this.call('getAutoZoom');\n  }\n\n  /**\n   * Enable or disable the auto-zoom\n   *\n   * @param {boolean} state `true` if enabled, `false` if disabled\n   * @return {Promise}\n   * @fullfill {boolean} The auto-zoom mode\n   */\n  setAutoZoom(state) {\n    return this.call('setAutoZoom', state);\n  }\n\n  /**\n   * Set the focus to the score\n   *\n   * @return {Promise}\n   */\n  focusScore() {\n    return this.call('focusScore');\n  }\n\n  /**\n   * Get cursor position\n   *\n   * @return {Promise}\n   * @fullfill {boolean} Current cursor position\n   */\n  getCursorPosition() {\n    return this.call('getCursorPosition');\n  }\n\n  /**\n   * Set cursor position\n   *\n   * @param {object} position New cursor position\n   * @return {Promise}\n   * @fullfill {boolean} Current cursor position\n   */\n  setCursorPosition(position) {\n    return this.call('setCursorPosition', position);\n  }\n\n  /**\n   * Get all the parts information\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the parts\n   */\n  getParts() {\n    return this.call('getParts');\n  }\n\n  /**\n   * Get the displayed parts\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the displayed parts\n   */\n  getDisplayedParts() {\n    return this.call('getDisplayedParts');\n  }\n\n  /**\n   * Choose the parts to display\n   *\n   * @param {array} parts List of the parts to display (UUIDs, indexes/idx, names or abbv)\n   * @return {Promise}\n   */\n  setDisplayedParts(parts) {\n    return this.call('setDisplayedParts', parts);\n  }\n\n  /**\n   * Get the number of measures in the score.\n   *\n   * @return {Promise}\n   * @fullfill {Number} The number of measures in the score\n   */\n  getNbMeasures() {\n    return this.call('getNbMeasures');\n  }\n\n  /**\n   * Get the measures uuids of the score\n   *\n   * @return {Promise}\n   * @fullfill {Array} The list of measures uuids.\n   */\n  getMeasuresUuids() {\n    return this.call('getMeasuresUuids');\n  }\n\n  /**\n   * Get all the parts information\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the parts\n   */\n  getMeasureDetails() {\n    return this.call('getMeasureDetails');\n  }\n\n  /**\n   * Get all the parts information\n   *\n   * @return {Promise}\n   * @fullfill {array} List of the parts\n   */\n  getNoteDetails() {\n    return this.call('getNoteDetails');\n  }\n\n  /**\n   * Move the cursor to the next left item in the score (grace note, note or rest).\n   *\n   * @param {Boolean} mute false to play the note the cursor is moving to\n   * @return {Promise}\n   * @fullfill {Promise}\n   */\n  goLeft(mute = false) {\n    return this.call('goLeft', { mute });\n  }\n\n  /**\n   * Move the cursor to the next right item in the score (grace note, note or rest).\n   *\n   * @param {Boolean} mute false to play the note the cursor is moving to\n   * @return {Promise}\n   * @fullfill {Promise}\n   */\n  goRight(mute = false) {\n    return this.call('goRight', { mute });\n  }\n\n  /**\n  * Get the current metronome mode\n  *\n  * @returns {Promise}\n  * @fullfill {Number} The metronome mode\n  */\n  getMetronomeMode() {\n    return this.call('getMetronomeMode');\n  }\n\n  /**\n   * Sett the metronome mode.\n   *\n   * Mode is defined as:\n   * ``` javascript\n   * const METRONOME_MODES = {\n   *   COUNT_IN: 0,\n   *   CONTINUOUS: 1,\n   *   DISABLED: 2,\n   * };\n   * ```\n   *\n   * @param {Number} mode the new metronome mode\n   * @return {Promise}\n   */\n  setMetronomeMode(mode) {\n    return this.call('setMetronomeMode', { mode });\n  }\n\n  /**\n   * Get the current metronome mode\n   *\n   * @returns {Promise}\n   * @fullfill {Number} The Playback speed\n   */\n  getPlaybackSpeed() {\n    return this.call('getPlaybackSpeed');\n  }\n\n  /**\n   * Set the playback speed.\n   *\n   * 1 is the normal value, then it is a value between 0.2 and 2.\n   *\n   * @param {Number} speed the new playback speed\n   * @return {Promise}\n   */\n  setPlaybackSpeed(speed) {\n    return this.call('setPlaybackSpeed', { speed });\n  }\n\n  /**\n   * Scroll to the cursor position in the score.\n   *\n   * The scrolling is done asynchronously, so it is not guaranteed that it will be complete\n   * by the time the callback is called.\n   *\n   * @return {Promise}\n   */\n  scrollToCursor() {\n    return this.call('scrollToCursor');\n  }\n}\n\nexport default Embed;\n"],"names":["window","postMessage","Error","normalizeElement","element","jQuery","document","getElementById","HTMLElement","TypeError","nodeName","iframe","querySelector","buildIframeUrl","parameters","url","baseUrl","score","urlParameters","Object","assign","jsapi","embedParams","qs","keys","map","k","concat","encodeURIComponent","join","createEmbedIframe","createElement","setAttribute","width","height","appendChild","embed","method","contentWindow","message","origin","parseMessage","data","JSON","parse","EmbedCallback","_classCallCheck","promises","eventCallbacks","_createClass","key","value","pushCall","name","resolve","reject","push","subscribeEvent","event","callback","length","unsubscribeEvent","idx","indexOf","splice","process","processMethodResponse","processEvent","promise","shift","error","response","_this","forEach","call","embeds","WeakMap","embedsReady","Embed","params","arguments","undefined","has","get","embedCallback","onReady","Promise","onMessage","source","addEventListener","set","ready","_this2","then","on","catch","off","loadFlatScore","loadMusicXML","loadJSON","getJSON","getMusicXML","options","_this3","_typeof","Uint8Array","getPNG","_this4","getMIDI","getFlatScoreMetadata","getEmbedConfig","setEditorConfig","editor","fullscreen","active","play","pause","stop","mute","getMasterVolume","setMasterVolume","getPartVolume","setPartVolume","mutePart","unmutePart","setPartSoloMode","unsetPartSoloMode","getPartSoloMode","getPartReverb","setPartReverb","setTrack","useTrack","seekTrackTo","print","getZoom","setZoom","zoom","getAutoZoom","setAutoZoom","state","focusScore","getCursorPosition","setCursorPosition","position","getParts","getDisplayedParts","setDisplayedParts","parts","getNbMeasures","getMeasuresUuids","getMeasureDetails","getNoteDetails","goLeft","goRight","getMetronomeMode","setMetronomeMode","mode","getPlaybackSpeed","setPlaybackSpeed","speed","scrollToCursor"],"mappings":"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"}